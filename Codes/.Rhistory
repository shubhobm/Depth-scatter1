eff_list2[[3]] = cbind(n, matrix(cop.table[,1], nrow=10, ncol=8, byrow=F)/cop.table[,-1])
eff_list2 = lapply(normcont4[1:2], function(x) cbind(n, matrix(err_list[[1]][,1], nrow=10, ncol=9, byrow=F)/x[[1]]))
cop.table = normcont4[[3]][[1]]
eff_list2[[3]] = cbind(n, matrix(cop.table[,1], nrow=10, ncol=8, byrow=F)/cop.table[,-1])
plot_list2 = lapply(eff_list2, plot_table)
plot_list = lapply(eff_list, plot_table)
plot_list2 = lapply(eff_list2, plot_table)
eff_list2
plot_list
eff_list
for(i in 1:3){
colnames(eff_list2[[i]]) = c("n",method_names)
}
eff_list2 = lapply(normcont4[1:2], function(x) cbind(n, matrix(err_list[[1]][,1], nrow=10, ncol=9, byrow=F)/x[[1]]))
cop.table = normcont4[[3]][[1]]
eff_list2[[3]] = cbind(n, matrix(cop.table[,1], nrow=10, ncol=8, byrow=F)/cop.table[,-1])
colnames(eff_list2[[i]])
method_names
for(i in 1:3){
colnames(eff_list2[[i]]) = c("n",method_names)
}
c("n",method_names)
colnames(eff_list2[[i]])
for(i in 1:3){
colnames(eff_list2[[i]])[-1] = method_names
}
eff_list2 = lapply(normcont4[1:2], function(x) cbind(n, matrix(err_list[[1]][,1], nrow=10, ncol=9, byrow=F)/x[[1]]))
cop.table = normcont4[[3]][[1]]
eff_list2[[3]] = cbind(n, matrix(cop.table[,1], nrow=10, ncol=8, byrow=F)/cop.table[,-1])
for(i in 1:3){
colnames(eff_list2[[i]])[-1] = method_names
}
colnames(eff_list2[[i]])
dim(eff_list2[[i]])
length(method_names)
colnames(eff_list2[[i]])[-1]
length(colnames(eff_list2[[i]])[-1])
method_names
length(method_names)
n = seq(50,500,by=50)
method_names = c(
"SCM","Tyler",
sprintf(r'($\tilde{\Sigma}-H$)'), sprintf(r'($\Sigma_*-H$)'),
sprintf(r'($\tilde{\Sigma}-P$)'), sprintf(r'($\Sigma_*-P$)'),
sprintf(r'($\tilde{\Sigma}-M$)'), sprintf(r'($\Sigma_*-M$)')
)
err_list = lapply(normt4, function(x) x[[1]])
eff_list = lapply(err_list, function(x){
xmat = matrix(x[,1], nrow=10, ncol=8, byrow=F)/x[,-1]
colnames(xmat) = method_names
cbind(n, xmat)
})
# FSE in presence of contamination: divide by uncontaminated error
eff_list2 = lapply(normcont4[1:2], function(x) cbind(n, matrix(err_list[[1]][,1], nrow=10, ncol=9, byrow=F)/x[[1]]))
cop.table = normcont4[[3]][[1]]
eff_list2[[3]] = cbind(n, matrix(cop.table[,1], nrow=10, ncol=8, byrow=F)/cop.table[,-1])
for(i in 1:3){
colnames(eff_list2[[i]])[-1] = method_names
}
# plot
plot_table = function(plotmat, line_width=.5, point_size=1){
# plot(plotmat[,1], type='b', ylim=c(0,1))
# for(i in 2:8){
#     lines(plotmat[,i], type='b', col=i)
# }
# legend("bottomright", col=1:6, lty=1, legend=TeX(method_names))
# ggplot
eff_melt = melt(data.table(plotmat), id.vars="n", measure.vars=colnames(plotmat)[-1])
names(eff_melt) = c("n","Method","FSE")
p1 = ggplot(eff_melt, aes(x=n, y=FSE, colour=Method)) +
geom_line(size=line_width) +
geom_point(size=point_size) +
theme_bw() +
# theme(legend.position = c(.82,.4)) +
xlab(expression(n)) +
scale_x_continuous(breaks=n) +
scale_color_manual(labels = TeX(method_names), values=1:8)
p1
}
plot_list = lapply(eff_list, plot_table)
plot_list2 = lapply(eff_list2, plot_table)
plot_table = function(plotmat, line_width=.5, point_size=1){
# plot(plotmat[,1], type='b', ylim=c(0,1))
# for(i in 2:8){
#     lines(plotmat[,i], type='b', col=i)
# }
# legend("bottomright", col=1:6, lty=1, legend=TeX(method_names))
# ggplot
eff_melt = melt(data.table(plotmat), id.vars="n", measure.vars=colnames(plotmat)[-1])
names(eff_melt) = c("n","Method","FSE")
p1 = ggplot(eff_melt, aes(x=n, y=FSE, colour=Method)) +
geom_line(size=line_width) +
geom_point(size=point_size) +
theme_bw() +
# theme(legend.position = c(.82,.4)) +
xlab(expression(n)) +
scale_x_continuous(breaks=n) +
scale_color_manual(labels = TeX(method_names), values=1:8)
p1
}
plot_list = lapply(eff_list, plot_table)
plot_list2 = lapply(eff_list2, plot_table)
dist_names = c("Normal", sprintf(r'($t_3$)'),sprintf(r'($t_{10}$)'),sprintf(r'($t_{20}$)'))
plot_list = lapply(1:4, function(i) plot_list[[i]]+ggtitle(TeX(dist_names[i])))
combined <- plot_list[[2]] + plot_list[[3]] + plot_list[[4]] + plot_list[[1]] +
plot_list2[[1]] + plot_list2[[3]] & theme(legend.position = "bottom")
combined + plot_layout(ncol=3, nrow=2, guides = "collect")
dist_names = c("Normal", sprintf(r'($t_3$)'),sprintf(r'($t_{10}$)'),sprintf(r'($t_{20}$)'),
"Normal with outliers","Gaussian copula/Beta marginals")
dist_names = c("Normal", sprintf(r'($t_3$)'),sprintf(r'($t_{10}$)'),sprintf(r'($t_{20}$)'),
"Normal with outliers","Gaussian copula/Beta marginals")
plot_list = lapply(1:4, function(i) plot_list[[i]]+ggtitle(TeX(dist_names[i])))
plot_list2 = lapply(1:2, function(i) plot_list2[[i]]+ggtitle(TeX(dist_names[i+4])))
combined <- plot_list[[2]] + plot_list[[3]] + plot_list[[4]] + plot_list[[1]] +
plot_list2[[1]] + plot_list2[[3]] & theme(legend.position = "bottom")
plot_table = function(plotmat, line_width=.5, point_size=1){
# plot(plotmat[,1], type='b', ylim=c(0,1))
# for(i in 2:8){
#     lines(plotmat[,i], type='b', col=i)
# }
# legend("bottomright", col=1:6, lty=1, legend=TeX(method_names))
# ggplot
eff_melt = melt(data.table(plotmat), id.vars="n", measure.vars=colnames(plotmat)[-1])
names(eff_melt) = c("n","Method","FSE")
p1 = ggplot(eff_melt, aes(x=n, y=FSE, colour=Method)) +
geom_line(size=line_width) +
geom_point(size=point_size) +
theme_bw() +
# theme(legend.position = c(.82,.4)) +
xlab(expression(n)) +
scale_x_continuous(breaks=n) +
scale_color_manual(labels = TeX(method_names), values=1:8)
p1
}
plot_list = lapply(eff_list, plot_table)
plot_list2 = lapply(eff_list2, plot_table)
plot_list2[[2]] = NULL
dist_names = c("Normal", sprintf(r'($t_3$)'),sprintf(r'($t_{10}$)'),sprintf(r'($t_{20}$)'),
"Normal with outliers","Gaussian copula/Beta marginals")
plot_list = lapply(1:4, function(i) plot_list[[i]]+ggtitle(TeX(dist_names[i])))
plot_list2 = lapply(1:2, function(i) plot_list2[[i]]+ggtitle(TeX(dist_names[i+4])))
combined <- plot_list[[2]] + plot_list[[3]] + plot_list[[4]] + plot_list[[1]] +
plot_list2[[1]] + plot_list2[[3]] & theme(legend.position = "bottom")
combined + plot_layout(ncol=3, nrow=2, guides = "collect")
plot_table = function(plotmat, line_width=.5, point_size=1){
# plot(plotmat[,1], type='b', ylim=c(0,1))
# for(i in 2:8){
#     lines(plotmat[,i], type='b', col=i)
# }
# legend("bottomright", col=1:6, lty=1, legend=TeX(method_names))
# ggplot
eff_melt = melt(data.table(plotmat), id.vars="n", measure.vars=colnames(plotmat)[-1])
names(eff_melt) = c("n","Method","FSE")
p1 = ggplot(eff_melt, aes(x=n, y=FSE, colour=Method)) +
geom_line(size=line_width) +
geom_point(size=point_size) +
theme_bw() +
# theme(legend.position = c(.82,.4)) +
xlab(expression(n)) +
scale_x_continuous(breaks=n) +
scale_color_manual(labels = TeX(method_names), values=1:8)
p1
}
plot_list = lapply(eff_list, plot_table)
plot_list2 = lapply(eff_list2, plot_table)
plot_list2[[2]] = NULL
dist_names = c("Normal", sprintf(r'($t_3$)'),sprintf(r'($t_{10}$)'),sprintf(r'($t_{20}$)'),
"Normal with outliers","Gaussian copula/Beta marginals")
plot_list = lapply(1:4, function(i) plot_list[[i]]+ggtitle(TeX(dist_names[i])))
plot_list2 = lapply(1:2, function(i) plot_list2[[i]]+ggtitle(TeX(dist_names[i+4])))
combined <- plot_list[[2]] + plot_list[[3]] + plot_list[[4]] + plot_list[[1]] +
plot_list2[[1]] + plot_list2[[2]] & theme(legend.position = "bottom")
combined + plot_layout(ncol=3, nrow=2, guides = "collect")
cop.table
plot_list2
plot_table = function(plotmat, line_width=.5, point_size=1){
# plot(plotmat[,1], type='b', ylim=c(0,1))
# for(i in 2:8){
#     lines(plotmat[,i], type='b', col=i)
# }
# legend("bottomright", col=1:6, lty=1, legend=TeX(method_names))
# ggplot
eff_melt = melt(data.table(plotmat), id.vars="n", measure.vars=colnames(plotmat)[-1])
names(eff_melt) = c("n","Method","FSE")
p1 = ggplot(eff_melt, aes(x=n, y=FSE, colour=Method)) +
geom_line(size=line_width) +
geom_point(size=point_size) +
theme_bw() +
# theme(legend.position = c(.82,.4)) +
xlab(expression(n)) +
scale_x_continuous(breaks=n) +
scale_color_manual(labels = TeX(method_names), values=1:8)
p1
}
plot_list = lapply(eff_list, plot_table)
plot_list2 = lapply(eff_list2, plot_table)
plot_list2[[2]] = NULL
dist_names = c("Normal", sprintf(r'($t_3$)'),sprintf(r'($t_{10}$)'),sprintf(r'($t_{20}$)'),
"Normal with outliers","Gaussian copula/Beta marginals")
plot_list = lapply(1:4, function(i) plot_list[[i]]+ggtitle(TeX(dist_names[i])))
plot_list2 = lapply(1:2, function(i) plot_list2[[i]]+ggtitle(TeX(dist_names[i+4])))
combined <- plot_list[[2]] + plot_list[[3]] + plot_list[[4]] + plot_list[[1]] +
plot_list2[[1]] + plot_list2[[2]] & theme(legend.position = "bottom")
combined + plot_layout(ncol=3, nrow=2, guides = "collect")
dist_names = c("Normal", sprintf(r'($t_3$)'),sprintf(r'($t_{10}$)'),sprintf(r'($t_{20}$)'),
"Contaminated normal","Copula")
plot_list = lapply(1:4, function(i) plot_list[[i]]+ggtitle(TeX(dist_names[i])))
plot_list2 = lapply(1:2, function(i) plot_list2[[i]]+ggtitle(TeX(dist_names[i+4])))
combined <- plot_list[[2]] + plot_list[[3]] + plot_list[[4]] + plot_list[[1]] +
plot_list2[[1]] + plot_list2[[2]] & theme(legend.position = "bottom")
combined + plot_layout(ncol=3, nrow=2, guides = "collect")
eff_list2[[3]]
plot_table = function(plotmat, line_width=.5, point_size=1){
# plot(plotmat[,1], type='b', ylim=c(0,1))
# for(i in 2:8){
#     lines(plotmat[,i], type='b', col=i)
# }
# legend("bottomright", col=1:6, lty=1, legend=TeX(method_names))
# ggplot
eff_melt = melt(data.table(plotmat), id.vars="n", measure.vars=colnames(plotmat)[-1])
names(eff_melt) = c("n","Method","FSE")
p1 = ggplot(eff_melt, aes(x=n, y=FSE, colour=Method)) +
geom_line(size=line_width) +
geom_point(size=point_size) +
theme_bw() +
# theme(legend.position = c(.82,.4)) +
xlab(expression(n)) +
scale_x_continuous(breaks=seq(50,500,by=100)) +
scale_color_manual(labels = TeX(method_names), values=1:8)
p1
}
plot_list = lapply(eff_list, plot_table)
plot_list2 = lapply(eff_list2, plot_table)
plot_list2[[2]] = NULL
dist_names = c("Normal", sprintf(r'($t_3$)'),sprintf(r'($t_{10}$)'),sprintf(r'($t_{20}$)'),
"Contaminated normal","Copula")
plot_list = lapply(1:4, function(i) plot_list[[i]]+ggtitle(TeX(dist_names[i])))
plot_list2 = lapply(1:2, function(i) plot_list2[[i]]+ggtitle(TeX(dist_names[i+4])))
combined <- plot_list[[2]] + plot_list[[3]] + plot_list[[4]] + plot_list[[1]] +
plot_list2[[1]] + plot_list2[[2]] & theme(legend.position = "bottom")
combined + plot_layout(ncol=3, nrow=2, guides = "collect")
plot_table = function(plotmat, line_width=.5, point_size=1){
# plot(plotmat[,1], type='b', ylim=c(0,1))
# for(i in 2:8){
#     lines(plotmat[,i], type='b', col=i)
# }
# legend("bottomright", col=1:6, lty=1, legend=TeX(method_names))
# ggplot
eff_melt = melt(data.table(plotmat), id.vars="n", measure.vars=colnames(plotmat)[-1])
names(eff_melt) = c("n","Method","FSE")
p1 = ggplot(eff_melt, aes(x=n, y=FSE, colour=Method)) +
geom_line(size=line_width) +
geom_point(size=point_size) +
theme_bw(axis.text.x = element_text(angle = 90)) +
# theme(legend.position = c(.82,.4)) +
xlab(expression(n)) +
scale_x_continuous(breaks=seq(50,500,by=100)) +
scale_color_manual(labels = TeX(method_names), values=1:8)
p1
}
plot_list = lapply(eff_list, plot_table)
plot_list2 = lapply(eff_list2, plot_table)
plot_list2[[2]] = NULL
dist_names = c("Normal", sprintf(r'($t_3$)'),sprintf(r'($t_{10}$)'),sprintf(r'($t_{20}$)'),
"Contaminated normal","Copula")
plot_list = lapply(1:4, function(i) plot_list[[i]]+ggtitle(TeX(dist_names[i])))
plot_list2 = lapply(1:2, function(i) plot_list2[[i]]+ggtitle(TeX(dist_names[i+4])))
combined <- plot_list[[2]] + plot_list[[3]] + plot_list[[4]] + plot_list[[1]] +
plot_list2[[1]] + plot_list2[[2]] & theme(legend.position = "bottom")
combined + plot_layout(ncol=3, nrow=2, guides = "collect")
eff_list2 = lapply(normcont4[1:2], function(x) cbind(n, matrix(err_list[[1]][,1], nrow=10, ncol=9, byrow=F)/x[[1]]))
cop.table = normcont4[[3]][[1]]
eff_list2[[3]] = cbind(n, matrix(cop.table[,1], nrow=10, ncol=8, byrow=F)/cop.table[,-1])
for(i in 1:3){
colnames(eff_list2[[i]])[-1] = method_names
}
# plot
plot_table = function(plotmat, line_width=.5, point_size=1){
# plot(plotmat[,1], type='b', ylim=c(0,1))
# for(i in 2:8){
#     lines(plotmat[,i], type='b', col=i)
# }
# legend("bottomright", col=1:6, lty=1, legend=TeX(method_names))
# ggplot
eff_melt = melt(data.table(plotmat), id.vars="n", measure.vars=colnames(plotmat)[-1])
names(eff_melt) = c("n","Method","FSE")
p1 = ggplot(eff_melt, aes(x=n, y=FSE, colour=Method)) +
geom_line(size=line_width) +
geom_point(size=point_size) +
theme_bw(axis.text.x = element_text(angle = 90)) +
# theme(legend.position = c(.82,.4)) +
xlab(expression(n)) +
scale_x_continuous(breaks=n) +
scale_color_manual(labels = TeX(method_names), values=1:8)
p1
}
plot_list = lapply(eff_list, plot_table)
plot_list2 = lapply(eff_list2, plot_table)
plot_table = function(plotmat, line_width=.5, point_size=1){
# plot(plotmat[,1], type='b', ylim=c(0,1))
# for(i in 2:8){
#     lines(plotmat[,i], type='b', col=i)
# }
# legend("bottomright", col=1:6, lty=1, legend=TeX(method_names))
# ggplot
eff_melt = melt(data.table(plotmat), id.vars="n", measure.vars=colnames(plotmat)[-1])
names(eff_melt) = c("n","Method","FSE")
p1 = ggplot(eff_melt, aes(x=n, y=FSE, colour=Method)) +
geom_line(size=line_width) +
geom_point(size=point_size) +
theme(axis.text.x = element_text(angle = 90)) +
theme_bw() +
# theme(legend.position = c(.82,.4)) +
xlab(expression(n)) +
scale_x_continuous(breaks=n) +
scale_color_manual(labels = TeX(method_names), values=1:8)
p1
}
plot_list = lapply(eff_list, plot_table)
plot_list2 = lapply(eff_list2, plot_table)
plot_list2[[2]] = NULL
dist_names = c("Normal", sprintf(r'($t_3$)'),sprintf(r'($t_{10}$)'),sprintf(r'($t_{20}$)'),
"Contaminated normal","Copula")
plot_list = lapply(1:4, function(i) plot_list[[i]]+ggtitle(TeX(dist_names[i])))
plot_list2 = lapply(1:2, function(i) plot_list2[[i]]+ggtitle(TeX(dist_names[i+4])))
combined <- plot_list[[2]] + plot_list[[3]] + plot_list[[4]] + plot_list[[1]] +
plot_list2[[1]] + plot_list2[[2]] & theme(legend.position = "bottom")
combined + plot_layout(ncol=3, nrow=2, guides = "collect")
plot_table = function(plotmat, line_width=.5, point_size=1){
# plot(plotmat[,1], type='b', ylim=c(0,1))
# for(i in 2:8){
#     lines(plotmat[,i], type='b', col=i)
# }
# legend("bottomright", col=1:6, lty=1, legend=TeX(method_names))
# ggplot
eff_melt = melt(data.table(plotmat), id.vars="n", measure.vars=colnames(plotmat)[-1])
names(eff_melt) = c("n","Method","FSE")
p1 = ggplot(eff_melt, aes(x=n, y=FSE, colour=Method)) +
geom_line(size=line_width) +
geom_point(size=point_size) +
theme_bw() +
theme(axis.text.x = element_text(angle = -90)) +
# theme(legend.position = c(.82,.4)) +
xlab(expression(n)) +
scale_x_continuous(breaks=n) +
scale_color_manual(labels = TeX(method_names), values=1:8)
p1
}
plot_list = lapply(eff_list, plot_table)
plot_list2 = lapply(eff_list2, plot_table)
plot_list2[[2]] = NULL
dist_names = c("Normal", sprintf(r'($t_3$)'),sprintf(r'($t_{10}$)'),sprintf(r'($t_{20}$)'),
"Contaminated normal","Copula")
plot_list = lapply(1:4, function(i) plot_list[[i]]+ggtitle(TeX(dist_names[i])))
plot_list2 = lapply(1:2, function(i) plot_list2[[i]]+ggtitle(TeX(dist_names[i+4])))
combined <- plot_list[[2]] + plot_list[[3]] + plot_list[[4]] + plot_list[[1]] +
plot_list2[[1]] + plot_list2[[2]] & theme(legend.position = "bottom")
combined + plot_layout(ncol=3, nrow=2, guides = "collect")
eff_list2 = lapply(normcont4[1:2], function(x) cbind(n, matrix(err_list[[1]][,1], nrow=10, ncol=9, byrow=F)/x[[1]]))
cop.table = normcont4[[3]][[1]]
eff_list2[[3]] = cbind(n, matrix(cop.table[,1], nrow=10, ncol=8, byrow=F)/cop.table[,-1])
for(i in 1:3){
colnames(eff_list2[[i]])[-1] = method_names
}
# plot
plot_table = function(plotmat, line_width=.5, point_size=1){
# plot(plotmat[,1], type='b', ylim=c(0,1))
# for(i in 2:8){
#     lines(plotmat[,i], type='b', col=i)
# }
# legend("bottomright", col=1:6, lty=1, legend=TeX(method_names))
# ggplot
eff_melt = melt(data.table(plotmat), id.vars="n", measure.vars=colnames(plotmat)[-1])
names(eff_melt) = c("n","Method","FSE")
p1 = ggplot(eff_melt, aes(x=n, y=FSE, colour=Method)) +
geom_line(size=line_width) +
geom_point(size=point_size) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
# theme(legend.position = c(.82,.4)) +
xlab(expression(n)) +
scale_x_continuous(breaks=n) +
scale_color_manual(labels = TeX(method_names), values=1:8)
p1
}
plot_list = lapply(eff_list, plot_table)
plot_list2 = lapply(eff_list2, plot_table)
plot_list2[[2]] = NULL
dist_names = c("Normal", sprintf(r'($t_3$)'),sprintf(r'($t_{10}$)'),sprintf(r'($t_{20}$)'),
"Contaminated normal","Copula")
plot_list = lapply(1:4, function(i) plot_list[[i]]+ggtitle(TeX(dist_names[i])))
plot_list2 = lapply(1:2, function(i) plot_list2[[i]]+ggtitle(TeX(dist_names[i+4])))
combined <- plot_list[[2]] + plot_list[[3]] + plot_list[[4]] + plot_list[[1]] +
plot_list2[[1]] + plot_list2[[2]] & theme(legend.position = "bottom")
combined + plot_layout(ncol=3, nrow=2, guides = "collect")
pdf("simplot.pdf", width=8, height=6)
combined + plot_layout(ncol=3, nrow=2, guides = "collect")
dev.off()
c2.table
c1.table
eff_list2[[1]]
method_names = c(
"SCM","Tyler",
sprintf(r'($\tilde{\Sigma}-H$)'), sprintf(r'($\Sigma_*-H$)'),
sprintf(r'($\tilde{\Sigma}-P$)'), sprintf(r'($\Sigma_*-P$)'),
sprintf(r'($\tilde{\Sigma}-M$)'), sprintf(r'($\Sigma_*-M$)')
)
n = seq(50,500,by=50)
method_names = c(
"SCM","Tyler",
sprintf(r'($\tilde{\Sigma}-H$)'), sprintf(r'($\Sigma_*-H$)'),
sprintf(r'($\tilde{\Sigma}-P$)'), sprintf(r'($\Sigma_*-P$)'),
sprintf(r'($\tilde{\Sigma}-M$)'), sprintf(r'($\Sigma_*-M$)')
)
err_list = lapply(normt4, function(x) x[[1]])
eff_list = lapply(err_list, function(x){
xmat = matrix(x[,1], nrow=10, ncol=8, byrow=F)/x[,-1]
colnames(xmat) = method_names
cbind(n, xmat)
})
# FSE in presence of contamination: divide by uncontaminated error
eff_list2 = lapply(normcont4[1:2], function(x) cbind(n, matrix(err_list[[1]][,1], nrow=10, ncol=9, byrow=F)/x[[1]]))
cop.table = normcont4[[3]][[1]]
eff_list2[[3]] = cbind(n, matrix(cop.table[,1], nrow=10, ncol=8, byrow=F)/cop.table[,-1])
for(i in 1:3){
colnames(eff_list2[[i]])[-1] = method_names
}
n = seq(50,500,by=50)
method_names = c(
"SCM","Tyler",
sprintf(r'($\tilde{\Sigma}-H$)'), sprintf(r'($\Sigma_*-H$)'),
sprintf(r'($\tilde{\Sigma}-P$)'), sprintf(r'($\Sigma_*-P$)'),
sprintf(r'($\tilde{\Sigma}-M$)'), sprintf(r'($\Sigma_*-M$)')
)
err_list = lapply(normt4, function(x) x[[1]])
eff_list = lapply(err_list, function(x){
xmat = matrix(x[,1], nrow=10, ncol=8, byrow=F)/x[,-1]
colnames(xmat) = method_names
cbind(n, xmat)
})
# FSE in presence of contamination: divide by uncontaminated error
eff_list2 = lapply(normcont4[1:2], function(x) cbind(n, matrix(err_list[[1]][,1], nrow=10, ncol=9, byrow=F)/x[[1]]))
cop.table = normcont4[[3]][[1]]
eff_list2[[3]] = cbind(n, matrix(cop.table[,1], nrow=10, ncol=8, byrow=F)/cop.table[,-1])
eff_list2[[1]]
eff_list2 = lapply(normcont4[1:2], function(x) cbind(n, matrix(err_list[[1]][,1], nrow=10, ncol=9, byrow=F)/x[[1]][,-1]))
cop.table = normcont4[[3]][[1]]
eff_list2[[3]] = cbind(n, matrix(cop.table[,1], nrow=10, ncol=8, byrow=F)/cop.table[,-1])
for(i in 1:3){
colnames(eff_list2[[i]])[-1] = method_names
}
eff_list2 = lapply(normcont4[1:2], function(x) cbind(n, matrix(err_list[[1]][,1], nrow=10, ncol=9, byrow=F)/x[[1]][,-1]))
cop.table = normcont4[[3]][[1]]
eff_list2[[3]] = cbind(n, matrix(cop.table[,1], nrow=10, ncol=8, byrow=F)/cop.table[,-1])
eff_list2[[1]]
n = seq(50,500,by=50)
method_names = c(
"SCM","Tyler",
sprintf(r'($\tilde{\Sigma}-H$)'), sprintf(r'($\Sigma_*-H$)'),
sprintf(r'($\tilde{\Sigma}-P$)'), sprintf(r'($\Sigma_*-P$)'),
sprintf(r'($\tilde{\Sigma}-M$)'), sprintf(r'($\Sigma_*-M$)')
)
err_list = lapply(normt4, function(x) x[[1]])
eff_list = lapply(err_list, function(x){
xmat = matrix(x[,1], nrow=10, ncol=8, byrow=F)/x[,-1]
colnames(xmat) = method_names
cbind(n, xmat)
})
# FSE in presence of contamination: divide by uncontaminated error
eff_list2 = lapply(normcont4[1:2], function(x) cbind(n, matrix(err_list[[1]][,1], nrow=10, ncol=9, byrow=F)/x[[1]][,-1]))
cop.table = normcont4[[3]][[1]]
eff_list2[[3]] = cbind(n, matrix(cop.table[,1], nrow=10, ncol=8, byrow=F)/cop.table[,-1])
eff_list2 = lapply(normcont4[1:2], function(x) cbind(n, matrix(err_list[[1]][,1], nrow=10, ncol=8, byrow=F)/x[[1]][,-1]))
cop.table = normcont4[[3]][[1]]
eff_list2[[3]] = cbind(n, matrix(cop.table[,1], nrow=10, ncol=8, byrow=F)/cop.table[,-1])
for(i in 1:3){
colnames(eff_list2[[i]])[-1] = method_names
}
eff_list2[[1]]
plot_table = function(plotmat, line_width=.5, point_size=1){
# plot(plotmat[,1], type='b', ylim=c(0,1))
# for(i in 2:8){
#     lines(plotmat[,i], type='b', col=i)
# }
# legend("bottomright", col=1:6, lty=1, legend=TeX(method_names))
# ggplot
eff_melt = melt(data.table(plotmat), id.vars="n", measure.vars=colnames(plotmat)[-1])
names(eff_melt) = c("n","Method","FSE")
p1 = ggplot(eff_melt, aes(x=n, y=FSE, colour=Method)) +
geom_line(size=line_width) +
geom_point(size=point_size) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
# theme(legend.position = c(.82,.4)) +
xlab(expression(n)) +
scale_x_continuous(breaks=n) +
scale_color_manual(labels = TeX(method_names), values=1:8)
p1
}
plot_list = lapply(eff_list, plot_table)
plot_list2 = lapply(eff_list2, plot_table)
plot_list2[[2]] = NULL
dist_names = c("Normal", sprintf(r'($t_3$)'),sprintf(r'($t_{10}$)'),sprintf(r'($t_{20}$)'),
"Contaminated normal","Copula")
plot_list = lapply(1:4, function(i) plot_list[[i]]+ggtitle(TeX(dist_names[i])))
plot_list2 = lapply(1:2, function(i) plot_list2[[i]]+ggtitle(TeX(dist_names[i+4])))
combined <- plot_list[[2]] + plot_list[[3]] + plot_list[[4]] + plot_list[[1]] +
plot_list2[[1]] + plot_list2[[2]] & theme(legend.position = "bottom")
# save plot
pdf("simplot.pdf", width=8, height=6)
combined + plot_layout(ncol=3, nrow=2, guides = "collect")
dev.off()
